<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ainannan.tool.cost.mapper.CarMapper">
	
	<sql id="Car_Column_List" >
        a.id as "id",
        a.money as "money",
        a.type as "type",
        a.licheng as "licheng",
        a.youjia as "youjia", 
        a.reason as "reason", 
        a.input_date as "inputDate", 
        a.create_user as "createUser",
        a.create_date as "createDate", 
        a.update_user as "updateUser",
        a.update_date as "updateDate", 
        a.del_flag as "delFlag",
        d.name as "typeName"
    </sql>
	
	<sql id="left_join_include">
		left join sys_dict d on d.value = a.type and d.label = 'car_type'
	</sql>
	
	<sql id="car_where">
		a.del_flag = #{DEL_FLAG_NORMAL}
		<if test="id != null and id != ''">
			and a.id = #{id}
		</if>
		<if test="type != null and type != ''">
			and a.type = #{type}
		</if>
	</sql>
	
	<select id="get" parameterType="String" resultType="Car">
		select 
		<include refid="Car_Column_List" />
		from cost_car a 
		<include refid="left_join_include" />
		where a.id = #{id}
	</select>
		
	<select id="findList" parameterType="user" resultType="Car">
		select 
		<include refid="Car_Column_List" /> 
		from cost_car a
		<include refid="left_join_include" />
		<where>
			<include refid="car_where" />
		</where>
		order by a.input_date desc
	</select>

	<select id="tongjiByNianduCharts" resultType="Tongji">
		SELECT
			substr(a.input_date, 1, 4) as "niandu",
			a.type as "s1",
			sum(money) as "m1"
		FROM
			cost_car a
		WHERE
			a.del_flag = '0'
		GROUP BY substr(a.input_date, 1, 4), a.type
	</select>
	
	<insert id="insert" parameterType="user">
		insert into cost_car(id,
		money, type, licheng, youjia, reason, input_date, 
		create_user,
		create_date,
		update_user,
		update_date,
		del_flag)
		value(#{id}, #{money}, #{type}, #{licheng}, #{youjia}, #{reason}, #{inputDate},
		#{createUser},
		#{createDate},
		#{updateUser},
		#{updateDate},
		#{delFlag})
	</insert>
	
	
	<update id="update">
		UPDATE cost_car	
		<trim prefix="SET" suffixOverrides=","> 
			<if test="money != null">
				money = #{money},
			</if>
			<if test="type != null">
				type = #{type},
			</if>
			<if test="licheng != null">
				licheng = #{licheng},
			</if>
			<if test="youjia != null">
				youjia = #{youjia},
			</if>
			<if test="reason != null">
				reason = #{reason},
			</if>
			<if test="inputDate != null">
				input_date = #{inputDate},
			</if>
			<if test="updateUser != null and updateUser != ''">
				update_user = #{updateUser},
			</if>	
			<if test="updateDate != null">
				update_date = #{updateDate},
			</if>	
			<if test="delFlag != null">
				del_flag = #{delFlag},
			</if>
		</trim>
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE cost_car	set del_flag = '1'		
		WHERE id = #{id}
	</update>
	
	
</mapper>