<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="cn.ainannan.timeline.picManager.mapper.TimelinePicMapper">

	<sql id="timelinePicColumns">
		a.id as "id",
		a.short_id as "shortId",
		a.filename as "filename",
		<if test="showPath != null and showPath != '' and showPath == 1">
			a.path as "path", a.src as "src", a.src_thumbnail as "srcThumbnail",
		</if>
		a.suffix as "suffix",
		a.file_size as "fileSize",
		a.md5 as "md5",
		a.finger_print as "fingerPrint",
		a.shot_date as "shotDate",
		a.similar_id as "similarId",
		a.similar_status as "similarStatus",
		a.state as "state",
		a.belong as "belong",
		a.create_date as "createDate",
		a.create_user as "createUser",
		a.update_date as "updateDate",
		a.update_user as "updateUser",
		a.geox,
		a.geoy,
		a.del_flag as "delFlag"
	</sql>

	<sql id="timelinePic_where">
		a.del_flag = #{DEL_FLAG_NORMAL}

		<if test="bSize != null and bSize != 0">
			and a.file_size &gt;= #{bSize}
		</if>
		<if test="eSize != null and eSize != 0">
			and a.file_size &lt;= #{eSize}
		</if>
		<if test="id != null and id != ''">
			and a.id = #{id}
		</if>
		<if test="shortId != null and shortId != ''">
			and a.short_Id = #{shortId}
		</if>
		<if test="filename != null and filename != ''">
			and a.filename like concat('%',#{filename},'%')
		</if>
		<if test="path != null and path != ''">
			and a.path = #{path}
		</if>
		<if test="state != null and state != ''">
			and a.state = #{state}
		</if>
		<if test="similarId != null and similarId != ''">
			and a.similar_Id = #{similarId}
		</if>
		<if test="similarStatus != null">
			and a.similar_Status = #{similarStatus}
		</if>
		<if test="belong != null and belong != ''">
			and a.belong = #{belong}
		</if>
		<if test="preSrc != null and preSrc != ''">
			and a.src like concat(#{preSrc}, '%')
		</if>
		<if test="shotDateL != null and shotDateL != ''">
			and a.shot_date like concat(#{shotDateL}, '%')
		</if>
		<if test="beginShotDate != null">
			and a.shot_date &gt;= #{beginShotDate}
		</if>
		<if test="endShotDate != null">
			and a.shot_date &lt; #{endShotDate}
		</if>
		<if test="timelineFlag != null and timelineFlag != ''">
			and not EXISTS(select * from timeline b where a.id =
			b.pic_id)
			AND NOT EXISTS (SELECT 0 FROM timeline_ignore c WHERE a.id =
			c.pic_id and c.type = #{timelineFlag})
		</if>
		<if
			test="thumbnailFlag != null and thumbnailFlag != '' and thumbnailFlag == 0">
			and src_thumbnail is null
		</if>
		<if test="geoIsNull != null and geoIsNull != '' and geoIsNull == 0">
			and (a.geox is null or a.geox = '' or a.geoy is null or
			a.geoy = '')
		</if>
		<if test="similarIsNotEmpty != null and similarIsNotEmpty != ''">
			<if test="similarIsNotEmpty == 1">
				and EXISTS (
				SELECT
				c.picid
				FROM
				(
				SELECT
				picid
				FROM
				timeline_similar
				GROUP BY
				picid
				) c
				WHERE
				a.short_ID = c.picid
				)
			</if>
		</if>
        <if test="notId != null and notId != ''">
            and a.id != #{notId}
        </if>
	</sql>

	<sql id="timelinePicJoins">
	</sql>

	<select id="get" resultType="timelinePic">
		select
			a.id as "id",
			a.short_id as "shortId",
			a.filename as "filename",
			a.suffix as "suffix",
			a.file_size as "fileSize",
			a.md5 as "md5",
			a.finger_print as "fingerPrint",
			a.shot_date as "shotDate",
			a.similar_id as "similarId",
			a.similar_status as "similarStatus",
			a.state as "state",
			a.belong as "belong",
			a.create_date as "createDate",
			a.create_user as "createUser",
			a.update_date as "updateDate",
			a.update_user as "updateUser",
			a.geox,
			a.geoy,
			a.del_flag as "delFlag"
		from timeline_pic a
		WHERE a.id = #{id}
	</select>

	<select id="getUrl" resultType="timelinePic">
		select
			a.id,
			a.filename,
			a.path,
			a.src,
			a.src_thumbnail as "srcThumbnail"
		from timeline_pic a
		WHERE a.id = #{id}
	</select>

	<select id="getGeoList" resultType="timelinePic">
		SELECT
			a.geox,
			a.geoy
		FROM
			timeline_pic a
		WHERE
			a.geox IS NOT NULL
		AND a.geox != '0'
		AND a.geoy IS NOT NULL
		AND a.geoy != '0'
	</select>

	<select id="getRandomImg" resultType="timelinePic">
		select
		<include refid="timelinePicColumns" />
		from timeline_pic a
		ORDER BY
			RAND()
		LIMIT 1
	</select>

	<!-- 获取拍摄日期为空的记录 -->
	<select id="getShotDateIsnull" parameterType="String"
		resultType="timelinePic">
		SELECT
		<include refid="timelinePicColumns" />
		FROM
		timeline_pic a
		WHERE
		a.del_flag = '0'
		AND a.shot_date IS NULL
		ORDER BY
		a.create_date desc
		LIMIT 1
	</select>

	<!-- 获取全部拍摄日期为空的记录 -->
	<select id="getAllShotDateIsnull" parameterType="String"
		resultType="timelinePic">
		SELECT
		<include refid="timelinePicColumns" />
		FROM
		timeline_pic a
		WHERE
		a.del_flag = '0'
		AND a.shot_date IS NULL
		ORDER BY
		a.create_date desc
	</select>

	<select id="getEqualMd5" parameterType="String"
		resultType="timelinePic">
		SELECT
		<include refid="timelinePicColumns" />
		FROM
		timeline_pic a
		WHERE
		a.md5 = (
		SELECT
		md5
		FROM
		timeline_pic
		WHERE
		del_flag = '0'
		GROUP BY
		md5
		HAVING
		count(md5) > 1
		LIMIT 1
		)
		order by a.src
		asc
	</select>

	<select id="getEqualFingerPrint" parameterType="String"
		resultType="timelinePic">
		SELECT
		<include refid="timelinePicColumns" />
		FROM
		timeline_pic a
		WHERE
		a.del_flag = '0'
		AND EXISTS (
		SELECT
		c.finger_print
		FROM
		(
		SELECT
		b.finger_print
		FROM
		timeline_pic b
		WHERE
		b.del_flag = '0'
		GROUP BY
		b.finger_print
		HAVING
		count(b.finger_print) > 1
		) c
		WHERE
		c.finger_print = a.finger_print
		)
		ORDER BY
		a.create_date DESC
	</select>

	<select id="findSimilarImgList" resultType="timelinePic">
		SELECT
		a.short_ID,
		a.path,
		a.filename,
		a.src_Thumbnail as "srcThumbnail",
		s.similarity
		FROM
		timeline_pic a
		LEFT JOIN timeline_similar s ON s.picid = #{shortId}
		AND s.otherid =
		a.short_ID and s.type = #{similarType}
		WHERE
		a.short_ID IN (
		SELECT
		a.otherid
		FROM
		timeline_similar a
		WHERE
		a.picid = #{shortId}
		)
	</select>

	<select id="getLastStatus" resultType="timelinePic">
		SELECT
		count(1) AS
		lastTotal,
		b.lastShotDate,
		c.lastImportDate
		FROM
		timeline_pic a
		LEFT JOIN (
		SELECT
		max(shot_date) as lastShotDate
		FROM
		timeline_pic
		WHERE
		del_flag =
		'0'
		) b ON 1 = 1
		left join (
		SELECT
		max(create_date) as lastImportDate
		FROM
		timeline_pic
		WHERE
		del_flag = '0'
		) c on 1=1
		WHERE
		a.del_flag = '0'
	</select>

	<select id="findList" parameterType="timelinePic"
		resultType="timelinePic">
		select
		<include refid="timelinePicColumns"/>
		from timeline_pic a
		<include refid="timelinePicJoins"/>
		<where>
			<include refid="timelinePic_where" />
		</where>
        <choose>
            <when test="sqlOrderBy != null and sqlOrderBy != ''">
                ORDER BY #{sqlOrderBy}
            </when>
            <otherwise>
                ORDER BY a.create_date DESC
            </otherwise>
        </choose>
		<if test="limitNum != null">
			limit 0, 100
		</if>
	</select>


	<select id="findGeoList" parameterType="timelinePic" resultType="timelinePic">
		SELECT
			a.id,
			a.filename,
			a.path,
			a.src
		FROM
			timeline_pic a
		WHERE
			a.del_flag = '0'
			and (
				a.geox is null
				or a.geox = ''
				or a.geoy is null
				or a.geoy = ''
			)
		limit 0, 200

	</select>

	<select id="findGeoAdjoinList" parameterType="timelinePic" resultType="timelinePic">
		SELECT
		<include refid="timelinePicColumns"/>,
		a.distance as "distance"
		FROM
			(
				SELECT
					S.*,
					ROUND(
						6378.138 * 2 * ASIN(
							SQRT(
								POW(
									SIN(
										(
											#{geox} * PI() / 180 - S.geox * PI() / 180
										) / 2
									),
									2
								) + COS(#{geox} * PI() / 180) * COS(S.geox * PI() / 180) * POW(
									SIN(
										(
											#{geoy} * PI() / 180 - S.geoy * PI() / 180
										) / 2
									),
									2
								)
							)
						) * 1000
					) AS distance
				FROM
					timeline_pic S
				WHERE
					S.del_flag = '0'
					and S.geox is not null and S.geoy is not null
					<if test="notId != null and notId != ''">
						and S.id != #{notId}
					</if>
			) a
		ORDER BY
			a.distance ASC
		LIMIT 1, 50

	</select>

	<select id="findTempList" parameterType="timelinePic"
		resultType="timelinePic">
		SELECT
		id,
		filename,
		path,
		src
		FROM
		timeline_pic
		WHERE
		del_flag = '0' and
		LENGTH(finger_print) = 16
		LIMIT 0, 50

	</select>

	<select id="findTempList2" parameterType="timelinePic"
		resultType="timelinePic">
		SELECT
		id,
		short_id as "shortId",
		finger_print as "fingerPrint"
		FROM
		timeline_pic
		WHERE
		del_flag = '0'
	</select>

	<select id="getFingerPrintList" parameterType="timelinePic"
		resultType="timelinePic">
		SELECT
		id,
		src_thumbnail as "srcThumbnail",
		finger_print as "fingerPrint"
		FROM
		timeline_pic
		where del_flag = '0' and finger_print is not null
		<if test="limitNum != null">
			limit #{limitNum}, 500
		</if>

	</select>

	<select id="findListFor1000" parameterType="timelinePic"
		resultType="timelinePic">
		select
		<include refid="timelinePicColumns" />
		from timeline_pic a
		<include refid="timelinePicJoins" />
		<where>
			<include refid="timelinePic_where" />
		</where>
		order by a.create_date desc
		<if test="limitNum != null">
			limit #{limitNum}
		</if>
	</select>

	<select id="findListByFinger" parameterType="timelinePic" resultType="timelinePic">
		SELECT
			a.id as 'id',
			a.short_ID as 'shortId',
			a.filename as 'filename',
			a. file_SIZE as 'fileSize',
			a.shot_date as 'shotDate',
			s.picCount
		FROM
			timeline_pic a
		LEFT JOIN (
			SELECT
				picid,
				count(1) AS 'picCount'
			FROM
				timeline_similar
			WHERE
				ignore_state is null
				and similarity &gt; #{SIMILAR_PASS_LINE}
			GROUP BY
				picid
		) s ON s.picid = a.short_ID
		WHERE
			a.short_ID IN (
				SELECT
					picid
				FROM
					timeline_similar
			)
		ORDER BY picCount desc
	</select>
    <select id="findListByShortId" parameterType="timelinePic" resultType="timelinePic">
		SELECT
            a.id as 'id',
            a.short_ID as 'shortId',
            a.filename as 'filename',
            a. file_size as 'fileSize',
            a.shot_date as 'shotDate',
            s.similarity as "similarity"
        FROM
            timeline_pic a
        left join (
        	select a.picid, a.otherid, a.similarity from timeline_similar a where picid = #{shortId}
        ) s on s.otherid = a.short_ID
        WHERE
            a.short_ID IN (
                SELECT
                    otherid
                FROM
                    timeline_similar
                where picid = #{shortId} and similarity &gt; #{SIMILAR_PASS_LINE}
            )
        ORDER BY s.similarity desc
	</select>

	<insert id="insert" parameterType="timelinePic">
		insert into timeline_pic(id,
		short_id, filename, path, src, src_thumbnail, suffix, file_size, md5,
		finger_print, shot_date, similar_id, similar_status, state, belong,
		create_date, create_user,
		update_date, update_user, del_flag,geox,geoy)
		value(#{id}, #{shortId},
		#{filename}, #{path}, #{src}, #{srcThumbnail},
		#{suffix}, #{fileSize},
		#{md5}, #{fingerPrint}, #{shotDate}, #{similarId},
		#{similarStatus}, #{state}, #{belong}
		#{createDate}, #{createUser},
		#{updateDate}, #{updateUser},
		#{DEL_FLAG_NORMAL}, #{geox}, #{geoy})
	</insert>

	<insert id="insertByList" parameterType="java.util.List">
		INSERT INTO timeline_pic(
		id,
		short_id,
		filename,
		path,
		src,
		src_thumbnail,
		suffix,
		file_size,
		md5,
		finger_print,
		shot_date,
		similar_id,
		similar_status,
		state,
		belong,
		create_date,
		create_user,
		update_date,
		update_user,
		geox,
		geoy,
		del_flag
		)
		<foreach collection="list" item="entity"
			separator=" union all ">
			SELECT
			#{entity.id},
			#{entity.shortId},
			#{entity.filename},
			#{entity.path},
			#{entity.src},
			#{entity.srcThumbnail},
			#{entity.suffix},
			#{entity.fileSize},
			#{entity.md5},
			#{entity.fingerPrint},
			#{entity.shotDate},
			#{entity.similarId},
			#{entity.similarStatus},
			#{entity.state},
			#{entity.belong},
			#{entity.createDate},
			#{entity.createUser},
			#{entity.updateDate},
			#{entity.updateUser},
			#{entity.geox},
			#{entity.geoy},
			#{entity.delFlag}

		</foreach>
	</insert>

	<update id="update">
		update timeline_pic
		<trim prefix="SET" suffixOverrides=",">
			<if test="shortId != null">
				short_id = #{shortId},
			</if>
			<if test="filename != null">
				filename = #{filename},
			</if>
			<if test="path != null">
				path = #{path},
			</if>
			<if test="src != null">
				src = #{src},
			</if>
			<if test="srcThumbnail != null and srcThumbnail != ''">
				src_thumbnail = #{srcThumbnail},
			</if>
			<if test="suffix != null">
				suffix = #{suffix},
			</if>
			<if test="fileSize != null">
				file_size = #{fileSize},
			</if>
			<if test="md5 != null">
				md5 = #{md5},
			</if>
			<if test="fingerPrint != null">
				finger_print = #{fingerPrint},
			</if>
			<if test="shotDate != null">
				shot_date = #{shotDate},
			</if>
			<if test="similarId != null">
				similar_id = #{similarId},
			</if>
			<if test="similarStatus != null">
				similar_status = #{similarStatus},
			</if>
			<if test="state != null">
				state = #{state},
			</if>
			<if test="belong != null">
				belong = #{belong},
			</if>
			<if test="geox != null and geox != ''">
				geox = #{geox},
			</if>
			<if test="geoy != null and geoy != ''">
				geoy = #{geoy},
			</if>
			<if test="createDate != null">
				create_date = #{createDate},
			</if>
			<if
				test="createUser != null and createUser != ''">
				create_user = #{createUser},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate},
			</if>
			<if
				test="updateUser != null and updateUser != ''">
				update_user = #{updateUser},
			</if>
		</trim>
		WHERE id = #{id}
	</update>

	<update id="saveByList">
		<foreach collection="picList" item="entity" separator=";">
			update timeline_pic
			<trim prefix="SET" suffixOverrides=",">
				<if test="entity.shortId != null">
					short_id = #{entity.shortId},
				</if>
				<if test="entity.filename != null">
					filename = #{entity.filename},
				</if>
				<if test="entity.path != null">
					path = #{entity.path},
				</if>
				<if test="entity.src != null">
					src = #{entity.src},
				</if>
				<if test="entity.srcThumbnail != null and srcThumbnail != ''">
					src_thumbnail = #{entity.srcThumbnail},
				</if>
				<if test="entity.suffix != null">
					suffix = #{entity.suffix},
				</if>
				<if test="entity.fileSize != null">
					file_size = #{entity.fileSize},
				</if>
				<if test="entity.md5 != null">
					md5 = #{entity.md5},
				</if>
				<if test="entity.fingerPrint != null">
					finger_print = #{entity.fingerPrint},
				</if>
				<if test="entity.shotDate != null">
					shot_date = #{entity.shotDate},
				</if>
				<if test="entity.similarId != null">
					similar_id = #{entity.similarId},
				</if>
				<if test="entity.similarStatus != null">
					similar_status = #{entity.similarStatus},
				</if>
				<if test="entity.state != null">
					state = #{entity.state},
				</if>
				<if test="entity.belong != null">
					belong = #{entity.belong},
				</if>
				<if test="entity.createDate != null">
					create_date = #{entity.createDate},
				</if>
				<if
					test="entity.createUser != null and entity.createUser != ''">
					create_user = #{entity.createUser},
				</if>
				<if test="entity.updateDate != null">
					update_date = #{entity.updateDate},
				</if>
				<if test="entity.geox != null and entity.geox != ''">
					geox = #{entity.geox},
				</if>
				<if test="entity.geoy != null and entity.geoy != ''">
					geoy = #{entity.geoy},
				</if>
				<if
					test="entity.updateUser != null and entity.updateUser != ''">
					update_user = #{entity.updateUser},
				</if>
			</trim>
			where id = #{entity.id}
		</foreach>
	</update>

	<update id="updateByList">
		<foreach collection="list" item="entity" separator=";">
			update timeline_pic
			<trim prefix="SET" suffixOverrides=",">
				<if test="entity.shortId != null">
					short_id = #{entity.shortId},
				</if>
				<if test="entity.filename != null">
					filename = #{entity.filename},
				</if>
				<if test="entity.path != null">
					path = #{entity.path},
				</if>
				<if test="entity.src != null">
					src = #{entity.src},
				</if>
				<if test="entity.srcThumbnail != null and srcThumbnail != ''">
					src_thumbnail = #{entity.srcThumbnail},
				</if>
				<if test="entity.suffix != null">
					suffix = #{entity.suffix},
				</if>
				<if test="entity.fileSize != null">
					file_size = #{entity.fileSize},
				</if>
				<if test="entity.md5 != null">
					md5 = #{entity.md5},
				</if>
				<if test="entity.fingerPrint != null">
					finger_print = #{entity.fingerPrint},
				</if>
				<if test="entity.shotDate != null">
					shot_date = #{entity.shotDate},
				</if>
				<if test="entity.similarId != null">
					similar_id = #{entity.similarId},
				</if>
				<if test="entity.similarStatus != null">
					similar_status = #{entity.similarStatus},
				</if>
				<if test="entity.state != null">
					state = #{entity.state},
				</if>
				<if test="entity.belong != null">
					belong = #{entity.belong},
				</if>
				<if test="entity.createDate != null">
					create_date = #{entity.createDate},
				</if>
				<if
					test="entity.createUser != null and entity.createUser != ''">
					create_user = #{entity.createUser},
				</if>
				<if test="entity.updateDate != null">
					update_date = #{entity.updateDate},
				</if>
				<if test="entity.geox != null and entity.geox != ''">
					geox = #{entity.geox},
				</if>
				<if test="entity.geoy != null and entity.geoy != ''">
					geoy = #{entity.geoy},
				</if>
				<if
					test="entity.updateUser != null and entity.updateUser != ''">
					update_user = #{entity.updateUser},
				</if>
			</trim>
			where id = #{entity.id}
		</foreach>
	</update>

	<update id="delete" parameterType="String">
		UPDATE timeline_pic SET
		del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<delete id="deleteByEntity" parameterType="timelinePic">
		delete from
		timeline_pic where id = #{id}
	</delete>

</mapper>